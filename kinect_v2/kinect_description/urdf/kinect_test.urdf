<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from kinect_test.xacro              | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="kinect_test" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <link name="footprint"/>
  <!-- Kinect sensor URDF part, cf. https://github.com/turtlebot/turtlebot
        and there turtlebot_description/urdf/sensors/kinect.xacro -->
  <joint name="kinect2_rgb_joint" type="fixed">
    <parent link="footprint"/>
    <child link="kinect2_rgb_frame"/>
    <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
  </joint>
  <link name="kinect2_rgb_frame"/>
  <joint name="kinect2_rgb_optical_joint" type="fixed">
    <parent link="kinect2_rgb_frame"/>
    <child link="kinect2_rgb_optical_frame"/>
    <origin rpy="-1.57 0 -1.57" xyz="0 0 0"/>
  </joint>
  <link name="kinect2_rgb_optical_frame"/>
  <joint name="kinect2_joint" type="fixed">
    <parent link="kinect2_rgb_frame"/>
    <child link="kinect2_link"/>
    <origin rpy="0 0 0" xyz="0 -0.0125 -0.016"/>
  </joint>
  <link name="kinect2_link">
    <visual>
      <geometry>
        <mesh filename="package://kinect_description/meshes/sensors/kinect2.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <origin rpy="-1.57 0 -1.57" xyz="0 0 0"/>
      <material name="black"/>
    </visual>
    <collision>
      <geometry>
        <box size=".1 .3 .1"/>
      </geometry>
      <contact_coefficients kd="1.0" kp="1000.0" mu="0"/>
    </collision>
    <inertial>
      <mass value="8.1"/>
      <inertia ixx="0.0675" ixy="0.0" ixz="0.0" iyy="0.0135" iyz="0.0" izz="0.0675"/>
    </inertial>
  </link>
  <joint name="kinect2_depth_joint" type="fixed">
    <parent link="kinect2_rgb_frame"/>
    <child link="kinect2_depth_frame"/>
    <origin rpy="0 0 0" xyz="0 -0.025 0"/>
  </joint>
  <link name="kinect2_depth_frame"/>
  <joint name="kinect2_depth_optical_joint" type="fixed">
    <parent link="kinect2_depth_frame"/>
    <child link="kinect2_depth_optical_frame"/>
    <origin rpy="-1.57 0 -1.57" xyz="0 0 0"/>
  </joint>
  <link name="kinect2_depth_optical_frame"/>
  <!-- Not sure why in a macro arguments cannot be passed to an
        associated .gazebo.xacro file... -->
  <!-- See https://github.com/turtlebot/turtlebot and there
        turtlebot_description/urdf/turtlebot_gazebo.urdf.xacro -->
  <gazebo reference="kinect2_link">
    <sensor name="kinect2_sensor" type="depth">
      <always_on>true</always_on>
      <update_rate>30.0</update_rate>
      <camera>
        <horizontal_fov>1.22111111111</horizontal_fov>
        <image>
          <width>512</width>
          <height>424</height>
          <format>L8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>8.0</far>
        </clip>
        <noise>
          <!-- Noise is sampled independently per pixel on each frame.
                        That pixel's noise value is added to each of its color
                        channels, which at that point lie in the range [0,1]. -->
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.05</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="kinect2_sensor_controller">
        <cameraName>kinect2</cameraName>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <imageTopicName>sd/image_ir_rect</imageTopicName>
        <depthImageTopicName>sd/image_depth_rect</depthImageTopicName>
        <pointCloudTopicName>sd/points</pointCloudTopicName>
        <cameraInfoTopicName>sd/camera_info</cameraInfoTopicName>
        <!--<depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>-->
        <frameName>kinect2_depth_optical_frame</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>4.5</pointCloudCutoffMax>
        <baseline>0.1</baseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <robotNamespace>/</robotNamespace>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="kinect2_link">
    <sensor name="kinect2_camera" type="camera">
      <always_on>true</always_on>
      <update_rate>30.0</update_rate>
      <camera name="kinect2_camera">
        <horizontal_fov>1.22111111111</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>10.0</far>
        </clip>
        <noise>
          <!-- Noise is sampled independently per pixel on each frame.
                        That pixel's noise value is added to each of its color
                        channels, which at that point lie in the range [0,1]. -->
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.002</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="kinect2_camera_controller">
        <alwaysOn>true</alwaysOn>
        <update_rate>30.0</update_rate>
        <cameraName>kinect2</cameraName>
        <imageTopicName>hd/image_color_rect</imageTopicName>
        <cameraInfoTopicName>hd/camera_info</cameraInfoTopicName>
        <frameName>kinect2_rgb_optical_frame</frameName>
        <baseline>0.1</baseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <robotNamespace>/</robotNamespace>
      </plugin>
    </sensor>
  </gazebo>
</robot>


<?xml version='1.0'?>
    <launch>
        <arg name="cameraFrame" default="/kinect2_depth_optical_frame"/>
        <arg name="recogModel_pub2Topic" default="/detectedObjs_preliminary"/>

        <!--a fake node that publish fake object recognition results-->
        <node name="fake_recognition_publisher" pkg="thesis_visualization" type="fakeObjPublisher.py" 
              output="screen" respawn="false" args="$(arg cameraFrame) $(arg recogModel_pub2Topic)">
        </node>

        <!--First MarkerArray node: for publishing aligned models-->
        <arg name="markerArrayTopic_preliminary" default="/markerArray_preliminary"/>
        <arg name="ns_preliminary" default="preliminary"/>
        <node name="markerArray_publisher_preliminary" pkg="thesis_visualization" type="addVisualModelNode.py" 
              output="screen" respawn="false" args="$(arg recogModel_pub2Topic) $(arg markerArrayTopic_preliminary) $(arg ns_preliminary)">
        </node>

        <!--Second MarkerArray node: for publishing aligned models-->
        <arg name="markerArrayTopic_afterAligned" default="/markerArray_afterAlign"/>
        <arg name="ns_afterAligned" default="afterAligned"/>
        <node name="markerArray_publisher_afterAligned" pkg="thesis_visualization" type="addVisualModelNode.py" 
              output="screen" respawn="false" args="$(arg recogModel_pub2Topic) $(arg markerArrayTopic_afterAligned) $(arg ns_afterAligned)">
        </node>


    </launch>